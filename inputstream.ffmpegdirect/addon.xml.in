<?xml version="1.0" encoding="UTF-8"?>
<addon
  id="inputstream.ffmpegdirect"
  version="1.19.5"
  name="Inputstream FFmpeg Direct"
  provider-name="Ross Nicholson">
  <requires>@ADDON_DEPENDS@</requires>
  <extension
    point="kodi.inputstream"
    name="ffmpegdirect"
    extension=""
    tags="true"
    listitemprops="program_number|stream_mode|open_mode|manifest_type|default_url|is_realtime_stream|playback_as_live|programme_start_time|programme_end_time|catchup_url_format_string|catchup_url_near_live_format_string|catchup_buffer_start_time|catchup_buffer_end_time|catchup_buffer_offset|catchup_terminates|catchup_granularity|timezone_shift|default_programme_duration|programme_catchup_id"
    library_@PLATFORM@="@LIBRARY_FILENAME@" />
  <extension point="xbmc.service" library="resources/lib/runner.py"/>
  <extension point="xbmc.addon.metadata">
    <summary lang="de_DE">InputStream Client für FFmpeg-Streams (libavformat)</summary>
    <summary lang="en_GB">InputStream Client for FFmpeg streams (libavformat)</summary>
    <description lang="de_DE">InputStream-Client für Streams, die entweder mit dem libav-Format von FFmpeg oder mit cURL von Kodi geöffnet werden können. Gängige Stream-Formate wie TS, HLS und DASH (ohne DRM) werden ebenso unterstützt wie viele andere.&#10;    &#10;Das Addon unterstützt auch Archiv-/Aufholdienste, bei denen Wiedergabefenster vorhanden sind (normalerweise in Tagen), und kann über diesen Zeitraum hinweg eine Zeitverschiebung bewirken.&#10;    &#10;Dokumentation finden Sie unter: https://github.com/xbmc/inputstream.ffmpegdirect/blob/Matrix/README.md&#10;    </description>
    <description lang="en_GB">InputStream Client for streams that can be opened by either FFmpeg's libavformat or Kodi's cURL. Common stream formats such as plain TS, HLS and DASH (without DRM) are supported as well as many others.&#10;    &#10;The addon also has support for Archive/Catchup services where there is a replay windows (usually in days) and can timeshift across that span.&#10;    &#10;For documenation visit: https://github.com/xbmc/inputstream.ffmpegdirect/blob/Matrix/README.md&#10;    </description>
    <platform>@PLATFORM@</platform>
    <license>GPL-2.0-or-later</license>
    <source>https://github.com/xbmc/inputstream.ffmpegdirect</source>
    <assets>
      <icon>icon.png</icon>
      <fanart>fanart.jpg</fanart>
    </assets>
    <news>
v1.19.4
- Fixed: Fix locking on EOF detection of terminating catchup stream by using std:recursive_mutex

v1.19.3
- Update: move verbose playback timeshift logging to debug level
- Update: Update cmakelists to reference FFMPEGDIRECT at build time

v1.19.2
- Update: Demuxer additions from kodi

v1.19.1
- Fixed: Ensure all values in GetTimes() default to zero

v1.19.0
- Added: FFmpeg patch for satip improvements
- Added: SafeLocaltime and custom catchup timestamp formats
- Added: Now timestamp and custom timestamp format for live catchup URL
- Added: Use curl for mingw package downloads

v1.18.2
- Update: Redact inputstream property URLs when logged

v1.18.1
- Update: Add temporary ffmpeg patch for embedded EIT (EPG) data in mepgts streams

v1.18.0
- Update: inputstream API 3.0.1
  - Fix wrong flags bit shift

v1.17.0
- Update: inputstream API 3.0.0

v1.16.0
- Update: Inputstream API 2.3.4
- Added: German translation
- Added: Debian build test to Travis CI

v1.15.5
- Update: Use add-on supplied StringUtils and remove local version
- Update: Remove local threading code and use addon supplied instead
- Update: Use new addon supplied CEndTime class based on chrono
- Update: Add autoreconf step to lib zvbi

v1.15.4
- Update: Remove p8-platforms and add local StringUtils for cpp17
- Update: Nettle patch for xcode 12

v1.15.3
- Update: gnutls 3.6.15 and nettle 3.6 bump

v1.15.2
- Update: bump to fix version number

v1.15.1
- Fixed: Use correct index for streams using a program number, fixes EIT data embedded in streams
- Update: FFmpeg to 4.3.1

v1.15.0
- Added: Add fast open for manifest stream and test setting for realtime off
- Fixed: Honour realtime stream property
- Fixed: Fix using prev button to seek back to start of stream
- Fixed: Ensure no slash at end of timeshift buffer path
- Fixed: Make sure write segment file is closed when buffer is destroyed
- Fixed: Use overwrite when opening files for write for compatibility with SMB on Android
- Fixed: Don't start timeshift and exit if index file cannot be created
- Update: If any timeshift file cannot be created log free disk space
- Fixed: Avoid crash for zero byte or partial timeshift segment files
- Fixed: Only read ffmpeg logging setting on stream start
- Update: Redact username and password for urls in log statements
- Fixed: Only create timeshift directory if it does not exist

v1.14.5
- Fixed: Fix lintian spellings and mimetype log statement
- Update: Readme

v1.14.4
- Fixed: Use kodi's own FFmpeg for ubuntu packaging

v1.14.3
- Update: Use FFmpeg 4.3

v1.14.2
- Fixed: Debian packaging

v1.14.1
- Update: Kodi API Bump

v1.14.0
- Added: Add HLS bandwidth limit and teletext/fps advanced settings
- Fixed: Add missing ATTRIBUTE_HIDDEN qualifer to InputSteamFFmpegDirect class
- Fixed: Fix memory leak for DemuxStreams
- Update: README

v1.13.0
- Added: Add setting for user to limit the length of the timeshift buffer

v1.12.0
- Added: Support seeking for VOD streams or regular file playback
- Fixed: Update HLS iformat name and remove hls workaround which is fixed in current FFmpeg
- Added: Timeshift for live streams (experimental)
- Added: Add support for Kodi user-agent and cookies when calling FFmpeg directly
- Added: Support multiple occurrences of year, month and day in catchup format specifiers
- Added: Add option to turn FFmpeg logging on/off

v1.11.0
- Update: inputstream API 2.3.1
- Update: Global API 1.2.0

v1.10.0
- Added: Continued playback of catchtup streams which don't support delayed live streams
- Added: Skip unsupported seeks like ones too close to live or those less one minute for streams that only allow a 1 minute granulaity
- Added: Limit seeking for terminating 1 second streams to within 1 minute of live and for 60 streams 2 minutes
- Update: Debian control file
- Update: gas-preprocessor to latest version and remove patch that is no longer required
- Update: .gitignore
- Fixed: Fix arch typo ffmpeg darwin_embedded
- Fixed: Cleanup apple frameworks usage in cmakelists
- Added: Change logging implementation and deprecate use of NOTICE level
- Added: Allow streams to be opened using cURL in addition to FFmpeg
- Update: Fix TS Streams by disallowing streaminfo for realtime streams
- Update: MKV Attachment and IsTransportStreamReady() updates from kodi

v1.9.2
- Update: Use generic mimetype from stream and remove old mime_type property

v1.9.1
- Update: Inpustream API 2.3.0

v1.9.0
- Added: HTTP Proxy support
- Update: Remove PauseStream for Inputstream API 2.2.0
- Fixed: fix changelog.in for debian packaging

v1.8.2
- Fixed: Ubuntu packaging
- Added: Updated RTP patch

v1.8.1
- Fixed: Suppress verbose logging on libxml2 on osx that causes travis builds to fail

v1.8.0
- Added: Support live URL in addition to catchup URL
- Added: Support resuming from pause and to catchup stream
- Update: Remove CanSeekStream and CanPauseStream for Inputstream API v2.1.0
- Update: .gitignore

v1.7.3
- Update: Remove pthreads library as now w32pthreads is used instead
- Update: libxml2 disable unused components for common depends and remove unrequired patch
- Update: Update libxml2 to 2.9.10 for windows, disable html module and remove unrequired patches
- Update: Enable asm for gnutls and nettle for darwin_embedded

v1.7.2
- Update: w32pthreads
- Fixed: gnutls disable tools for OSX 10.15.4 compatibility
- Fixed: libxml2 patch for OSX 10.15.4/Xcode 11.4 compatibility
- Update: SPDX, headers and badges
- Update: gnutls to 3.6.13
- Update: gmp on android to 6.2.0

v1.7.1
- Fixed: tvOS build

v1.7.0
- Update: remove unrequired gnutls patch
- Fixed: Replace ;'s workaround for cmake bug for ffmpeg LDFLAGS
- Added: Patch for ffmpeg using rtp protocol where sources option is not retained
- Update: Document programme_catchup_id stream property in README
- Added: Support for timestamp catchup format specifier
- Added: Support duration units format specifer to convert duration to mins or hours
- Update: Update darwin deprecated thread call
- Fixed: validate duration format specifier and cap to time now
- Added: Add optional stream property for live catchup url
- Added: Support for offset catchup format specifier
- Fixed: Disable Neon for arm for iOS/tvOS
- Fixed: Raspberry Pi build

v1.6.0
- Added: Support catchup-id stream property
- Added: Enable pthreads for FFmpeg on Windows to allow circular buffer for UDP streams
- Added: Fanart and icon
- Added: Move from appveyor to Azure DevOps to windows CI
- Added: Source and license to addon.xml
- Added: p8-platform to addon depends
- Fixed: Remove kodi protocol options before opening URL
- Fixed: Wrong mms/rtp/udp url being used
- Fixed: Android linkage for ffmpeg broken
- Fixed: Travis status image
- Update: To gnutls-3.6.12

v1.5.0
- Update: FFmpeg-n4.2.2, patches refreshed

v1.4.1
- Update: Cleanup logging

v1.4.0
- Added: gnutls patch to add libdl to support newer OSes
- Added: Add support for mms and rtp/udp streams with sources
- Fixed: Add workaround for CMake and Frameworks on Darwin

v1.3.0
- Added: Support for Windows and iOS
- Update: To gmp-6.2.0
- Update: To nettle-3.5.1
- Update: To gnutls-3.6.11.1

v1.2.1
- Fixed: Support for XCode build with GCC via travis

v1.2.0
- Added: Jenkinsfile and .travel.yml
- Added: Support for Android and linux
- Fixed: Some depnds errors for iOS, still more to fix
- Added: Clang and g++ build supported from Travis, osx travis not working

v1.1.0
- Added: Support for chapters

v1.0.0
- Added: Initial version working for both normal streams and those supporting catchup

Full changelog here: https://github.com/xbmc/inputstream.ffmpegdirect/blob/Matrix/inputstream.ffmpegdirect/changelog.txt
    </news>
  </extension>
</addon>
