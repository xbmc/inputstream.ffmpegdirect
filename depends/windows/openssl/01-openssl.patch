diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000000..a92d7101fb
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,110 @@
+cmake_minimum_required(VERSION 3.0)
+
+project(openssl VERSION 1.1.1 LANGUAGES C)
+
+include(CheckSymbolExists)
+check_symbol_exists(_X86_ "Windows.h" _X86_)
+check_symbol_exists(_AMD64_ "Windows.h" _AMD64_)
+check_symbol_exists(_ARM_ "Windows.h" _ARM_)
+check_symbol_exists(_ARM64_ "Windows.h" _ARM64_)
+
+find_package(StrawberryPerl REQUIRED)
+set(ENV{PATH} "${STRAWBERRYPERL_PATH};$ENV{PATH}")
+
+if(_X86_)
+	message(STATUS "Win32")
+	set(OPENSSL_PLATFORM VC-WIN32)
+elseif(_AMD64_)
+	message(STATUS "x64")
+	set(OPENSSL_PLATFORM VC-WIN64A)
+elseif(_ARM_)
+	message(STATUS "arm")
+	set(OPENSSL_PLATFORM VC-WIN32-ARM)
+elseif(_ARM64_)
+	message(STATUS "arm64")
+	set(OPENSSL_PLATFORM VC-WIN64-ARM)
+else()
+	message(FATAL_ERROR "Unsupported target architecture")
+endif()
+
+list(APPEND CONFIGURE_FLAGS disable-capieng enable-static-engine no-asm no-dso no-shared no-tests no-ui-console)
+if (WINDOWS_STORE)
+  set(OPENSSL_PLATFORM "${OPENSSL_PLATFORM}-UWP")
+  # See NOTES.WIN in openssl, says this is required for uwp
+  list(APPEND CONFIGURE_FLAGS no-uplink)
+endif()
+
+message(STATUS "perl Configure ${OPENSSL_PLATFORM} ${CONFIGURE_FLAGS} --prefix=${CMAKE_INSTALL_PREFIX}")
+execute_process(COMMAND perl Configure ${OPENSSL_PLATFORM} ${CONFIGURE_FLAGS} --prefix=${CMAKE_INSTALL_PREFIX} WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+
+add_custom_target(openssl ALL COMMAND nmake build_generated libcrypto.lib libssl.lib WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+
+add_library(crypto INTERFACE)
+target_link_libraries(crypto
+	INTERFACE
+	libcrypto.lib
+)
+
+target_link_directories(crypto
+	INTERFACE
+	$<INSTALL_INTERFACE:lib>
+)
+
+add_library(ssl INTERFACE)
+target_link_libraries(ssl
+	INTERFACE
+	libssl.lib
+)
+
+target_link_directories(ssl
+	INTERFACE
+	$<INSTALL_INTERFACE:lib>
+)
+
+install(DIRECTORY include/openssl DESTINATION include/ FILES_MATCHING PATTERN "*.h")
+install(FILES libcrypto.lib libssl.lib ossl_static.pdb DESTINATION lib/)
+
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(
+  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake
+  VERSION ${PROJECT_VERSION}
+  COMPATIBILITY AnyNewerVersion
+)
+
+install(TARGETS crypto EXPORT crypto 
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib
+	LIBRARY DESTINATION lib
+	INCLUDES DESTINATION include)
+
+install(TARGETS ssl EXPORT ssl 
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib
+	LIBRARY DESTINATION lib
+	INCLUDES DESTINATION include)
+
+install(EXPORT crypto
+  FILE
+    crypto.cmake
+  NAMESPACE
+    openssl::
+  DESTINATION
+    lib/cmake/openssl
+)
+
+install(EXPORT ssl
+  FILE
+    ssl.cmake
+  NAMESPACE
+    openssl::
+  DESTINATION
+    lib/cmake/openssl
+)
+
+install(
+  FILES
+    cmake/openssl-config.cmake
+    ${CMAKE_CURRENT_BINARY_DIR}/openssl-config-version.cmake
+  DESTINATION
+    lib/cmake/openssl
+)
diff --git a/Configurations/10-main.conf b/Configurations/10-main.conf
index 3c4299d264..c5915a8561 100644
--- a/Configurations/10-main.conf
+++ b/Configurations/10-main.conf
@@ -1287,7 +1287,7 @@ my %targets = (
     },
     "VC-WIN64I" => {
         inherit_from     => [ "VC-WIN64-common", asm("ia64_asm"),
-                              sub { $disabled{shared} ? () : "ia64_uplink" } ],
+                              sub { $disabled{uplink} ? () : "ia64_uplink" } ],
         AS               => "ias",
         ASFLAGS          => "-d debug",
         asoutflag        => "-o ",
@@ -1299,7 +1299,7 @@ my %targets = (
     },
     "VC-WIN64A" => {
         inherit_from     => [ "VC-WIN64-common", asm("x86_64_asm"),
-                              sub { $disabled{shared} ? () : "x86_64_uplink" } ],
+                              sub { $disabled{uplink} ? () : "x86_64_uplink" } ],
         AS               => sub { vc_win64a_info()->{AS} },
         ASFLAGS          => sub { vc_win64a_info()->{ASFLAGS} },
         asoutflag        => sub { vc_win64a_info()->{asoutflag} },
@@ -1312,7 +1312,7 @@ my %targets = (
     },
     "VC-WIN32" => {
         inherit_from     => [ "VC-noCE-common", asm("x86_asm"),
-                              sub { $disabled{shared} ? () : "uplink_common" } ],
+                              sub { $disabled{uplink} ? () : "uplink_common" } ],
         CFLAGS           => add("/WX"),
         AS               => sub { vc_win32_info()->{AS} },
         ASFLAGS          => sub { vc_win32_info()->{ASFLAGS} },
diff --git a/Configurations/50-win-onecore.conf b/Configurations/50-win-onecore.conf
index d478f42b0f..9ce0f6870b 100644
--- a/Configurations/50-win-onecore.conf
+++ b/Configurations/50-win-onecore.conf
@@ -61,4 +61,53 @@ my %targets = (
         ex_libs         => "onecore.lib",
         multilib        => "-arm64",
     },
+
+    # Universal Windows Platform (UWP) App Support
+
+    # TODO
+    #
+    # The 'disable' attribute should have 'uplink'.
+    # however, these are checked in some 'inherit_from', which is processed
+    # very early, before the 'disable' attributes are seen.
+    # This is a problem that needs to be resolved in Configure first.
+    #
+    # But if you want to build library with Windows 10 Version 1809 SDK or
+    # earlier, the 'disable' attribute should also have 'asm'.
+
+    "VC-WIN32-UWP" => {
+        inherit_from    => [ "VC-WIN32-ONECORE" ],
+        lflags          => add("/APPCONTAINER"),
+        defines         => add("WINAPI_FAMILY=WINAPI_FAMILY_APP",
+                               "_WIN32_WINNT=0x0A00"),
+        dso_scheme      => "",
+        disable         => [ 'ui-console', 'async', 'uplink' ],
+        ex_libs         => "WindowsApp.lib",
+    },
+     "VC-WIN64A-UWP" => {
+        inherit_from    => [ "VC-WIN64A-ONECORE" ],
+        lflags          => add("/APPCONTAINER"),
+        defines         => add("WINAPI_FAMILY=WINAPI_FAMILY_APP",
+                               "_WIN32_WINNT=0x0A00"),
+        dso_scheme      => "",
+        disable         => [ 'ui-console', 'async', 'uplink' ],
+        ex_libs         => "WindowsApp.lib",
+    },
+    "VC-WIN32-ARM-UWP" => {
+        inherit_from    => [ "VC-WIN32-ARM" ],
+        lflags          => add("/APPCONTAINER"),
+        defines         => add("WINAPI_FAMILY=WINAPI_FAMILY_APP",
+                               "_WIN32_WINNT=0x0A00"),
+        dso_scheme      => "",
+        disable         => [ 'ui-console', 'async', 'uplink' ],
+        ex_libs         => "WindowsApp.lib",
+    },
+     "VC-WIN64-ARM-UWP" => {
+        inherit_from    => [ "VC-WIN64-ARM" ],
+        lflags          => add("/APPCONTAINER"),
+        defines         => add("WINAPI_FAMILY=WINAPI_FAMILY_APP",
+                               "_WIN32_WINNT=0x0A00"),
+        dso_scheme      => "",
+        disable         => [ 'ui-console', 'async', 'uplink' ],
+        ex_libs         => "WindowsApp.lib",
+    },
 );
diff --git a/Configurations/windows-makefile.tmpl b/Configurations/windows-makefile.tmpl
index 8ef70b8699..b0ddbf1c35 100644
--- a/Configurations/windows-makefile.tmpl
+++ b/Configurations/windows-makefile.tmpl
@@ -164,8 +164,8 @@ libdir={- file_name_is_absolute($libdir)
 
 ##### User defined commands and flags ################################
 
-CC={- $config{CC} -}
-CPP={- $config{CPP} -}
+CC="{- $config{CC} -}"
+CPP="{- $config{CPP} -}"
 CPPFLAGS={- our $cppflags1 = join(" ",
                                   (map { "-D".$_} @{$config{CPPDEFINES}}),
                                   (map { " /I ".$_} @{$config{CPPINCLUDES}}),
diff --git a/Configure b/Configure
index 5a699836f3..859b9f4ad9 100755
--- a/Configure
+++ b/Configure
@@ -63,6 +63,7 @@ my $usage="Usage: Configure [no-<cipher> ...] [enable-<cipher> ...] [-Dxxx] [-lx
 # zlib-dynamic  Like "zlib", but the zlib library is expected to be a shared
 #               library and will be loaded in run-time by the OpenSSL library.
 # sctp          include SCTP support
+# no-uplink     Don't build support for UPLINK interface.
 # enable-weak-ssl-ciphers
 #               Enable weak ciphers that are disabled by default.
 # 386           generate 80386 code in assembly modules
@@ -407,6 +408,7 @@ my @disablables = (
     "ubsan",
     "ui-console",
     "unit-test",
+    "uplink",
     "whirlpool",
     "weak-ssl-ciphers",
     "zlib",
@@ -1118,6 +1118,8 @@ foreach my $feature (@{$target{enable}}) {
         delete $disabled{$feature};
     }
 }
+# If uplink_arch isn't defined, disable uplink
+$disabled{uplink} = 'no uplink_arch' unless (defined $target{uplink_arch});

 $target{CXXFLAGS}//=$target{CFLAGS} if $target{CXX};
 $target{cxxflags}//=$target{cflags} if $target{CXX};
diff --git a/INSTALL b/INSTALL
index 2119cbae9e..51a7cd2f0b 100644
--- a/INSTALL
+++ b/INSTALL
@@ -540,6 +540,9 @@
                    Enable additional unit test APIs. This should not typically
                    be used in production deployments.
 
+  no-uplink
+                   Don't build support for UPLINK interface.
+
   enable-weak-ssl-ciphers
                    Build support for SSL/TLS ciphers that are considered "weak"
                    (e.g. RC4 based ciphersuites).
diff --git a/NOTES.WIN b/NOTES.WIN
index b1cb542d09..7b8ceadf72 100644
--- a/NOTES.WIN
+++ b/NOTES.WIN
@@ -83,6 +83,18 @@
  is, of course, to choose a different set of directories by using
  --prefix and --openssldir when configuring.
 
+
+ Special notes for Universal Windows Platform builds, a.k.a. VC-*-UWP
+ --------------------------------------------------------------------
+
+ - UWP targets only support building the static and dynamic libraries.
+
+ - The "no-uplink" must be given in the "Configure" script.
+
+ - You should define the platform type to "uwp" and the target arch via
+   "vcvarsall.bat" before you compile. For example, if you want to build
+   "arm64" builds, you should type "vcvarsall.bat x86_arm64 uwp".
+
  mingw and mingw64
  =================
 
diff --git a/cmake/openssl-config.cmake b/cmake/openssl-config.cmake
new file mode 100644
index 0000000000..6ad219072f
--- /dev/null
+++ b/cmake/openssl-config.cmake
@@ -0,0 +1,3 @@
+# include(${CMAKE_CURRENT_LIST_DIR}/openssl.cmake)
+include(${CMAKE_CURRENT_LIST_DIR}/crypto.cmake)
+include(${CMAKE_CURRENT_LIST_DIR}/ssl.cmake)
\ No newline at end of file
diff --git a/ms/uplink-x86_64.pl b/ms/uplink-x86_64.pl
index 1f244504cd..713e4ea8e3 100755
--- a/ms/uplink-x86_64.pl
+++ b/ms/uplink-x86_64.pl
@@ -8,7 +8,7 @@
 
 $output=pop;
 $0 =~ m/(.*[\/\\])[^\/\\]+$/; $dir=$1;
-open OUT,"| \"$^X\" \"${dir}../crypto/perlasm/x86_64-xlate.pl\" \"$output\"";
+open OUT,"| \"$^X\" \"${dir}/../crypto/perlasm/x86_64-xlate.pl\" \"$output\"";
 *STDOUT=*OUT;
 push(@INC,"${dir}.");
 
